
from sqlalchemy import (create_engine, desc, func,
    CheckConstraint, PrimaryKeyConstraint, UniqueConstraint,
    Index, Column, DateTime, Integer, String, ForeignKey)
from sqlalchemy.orm import sessionmaker

from sqlalchemy.orm import declarative_base

Base = declarative_base()
class Assignment(Base):             #Creates an assignment class

    __tablename__='assignments'     #Creates a table (if it doesnt exist) called "assignments"

    __table_args__=(
        PrimaryKeyConstraint(       #Sets the id as the primary key
            'id',
            name='id_pk'
        ),
        UniqueConstraint(           #makes sure that class instances have a unique name
            'name',
            name='unique_name'
        )
    )

    id = Column(Integer(), primary_key=True)    #Creates a column with data containing the id of the Assignment (Autogenerated sequentially)
    name = Column(String())                     #Creates a column 'name' containing the name data of the object created
    category = Column(String())
    grade = Column(Integer())                     #Creates a column 'grade containing the grade data of the object
    #student_id = Column(Integer(),ForeignKey('student.id'))

    def __init__(self,name,category, grade):
        self.name=name
        self.category = category
        self.grade = grade

    #Ensure grade is not above 100:

"""     def get_grade(self):
        return self._grade
    
    def set_grade(self, value):
        if value > 100 or value < 0:
            print("Invalid Grade! Please enter a valid one")
        else:
            self._grade = value """

    #grade = property(fget=get_grade,fset=set_grade)      